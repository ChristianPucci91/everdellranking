TODO

✅ Best practices 1: 
 Naming delle variabili/funzioni dei file tipo kebab-case camelcase
 Componenti riutilizzabili
// Struttura dei file

  
| Cosa      | Regola                                                    | Esempio                                       |
| --------- | --------------------------------------------------------- | --------------------------------------------- |
| Variabili | Usa nomi descrittivi, in camelCase per JS/PHP             | `let userName`, `$userEmail`                  |
| Funzioni  | Usa verbi per azioni                                      | `getUserById()`, `sendEmail()`                |
| Classi    | PascalCase                                                | `UserRepository`, `AdminController`           |
| File      | snake\_case o kebab-case (JS/Vue), PascalCase (PHP class) | `user-profile.vue`, `AdminUserController.php` |
| Costanti  | UPPER\_SNAKE\_CASE                                        | `MAX_ATTEMPTS`                                |


✅ Best practice 2:
Una funzione = una responsabilità

Nome descrittivo

Non cambiare variabili esterne (no side effects)

Non più di 3-5 argomenti

//////////////////////

DRY (Don’t Repeat Yourself)
✅ Best practice 3:
Evita di ripetere codice identico → estrai funzioni o componenti riutilizzabili.

/////////////////////////////////////

Design Patterns consigliati
✅ Service Layer
Per spostare logica dal controller:


$userService->resetPassword($user);
✅ Repository Pattern
Per separare DB logic:


interface UserRepositoryInterface
class EloquentUserRepository implements UserRepositoryInterface
✅ DTO (Data Transfer Object)
Per passare dati puliti tra livelli:


UserData::fromRequest($request)
✅ Factory Pattern (Laravel Model Factory)
Per generare dati in seed/test:

User::factory()->create()

/////////////////////

6. Sicurezza e sanificazione dei dati
✅ Best practice 4:
Escape dei dati su Blade: {{ $value }}, non {!! $value !!}

Validazione centralizzata con FormRequest

Rate limiting su API e login

Usare Gate/Policy per i permessi

7. sanificazione degli input


